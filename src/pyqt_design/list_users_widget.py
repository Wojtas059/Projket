# Form implementation generated from reading ui file 'sing_up_widget.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QHBoxLayout, QMessageBox, QWidget

from src.database_handlers.database_handler import DatabaseHandler



class UserSeeList(QHBoxLayout):
    def __init__(self, **kwargs):
        super(UserSeeList, self).__init__()
        self.id_user = kwargs.get("id", "")
        self.login_user = kwargs.get("login", "")

        spacerItem = QtWidgets.QSpacerItem(
            40,
            20,
            QtWidgets.QSizePolicy.Policy.Expanding,
            QtWidgets.QSizePolicy.Policy.Minimum,
        )
        self.addItem(spacerItem)

        # self.number = QtWidgets.QLabel()
        # self.number.setObjectName("number")
        # self.number.setText(kwargs.get('number', ""))
        # self.addWidget(self.number)

        self.name = QtWidgets.QLabel()
        self.name.setObjectName("name")
        self.name.setText(kwargs.get("name", ""))
        self.addWidget(self.name)
        self.surname = QtWidgets.QLabel()
        self.surname.setObjectName("surname")
        self.surname.setText(kwargs.get("surname", ""))
        self.addWidget(self.surname)
        self.email = QtWidgets.QLabel()
        self.email.setObjectName("email")
        self.email.setText(kwargs.get("email", ""))
        self.addWidget(self.email)
        self.see_history = QtWidgets.QPushButton()
        self.see_history.setObjectName("see_history")
        self.addWidget(self.see_history)
        spacerItem1 = QtWidgets.QSpacerItem(
            40,
            20,
            QtWidgets.QSizePolicy.Policy.Expanding,
            QtWidgets.QSizePolicy.Policy.Minimum,
        )
        self.addItem(spacerItem1)
        self.retranslateUi()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.see_history.setText(_translate("ManagmentSensor", "Zobacz historię"))


class ListUsers(QWidget):
    def __init__(self, parent):
        super(ListUsers, self).__init__(parent)
        self.setObjectName("ListUsers")
        self.verticalLayout = QtWidgets.QVBoxLayout(self)
        self.verticalLayout.setObjectName("verticalLayout")

        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        spacerItem2 = QtWidgets.QSpacerItem(
            40,
            20,
            QtWidgets.QSizePolicy.Policy.Expanding,
            QtWidgets.QSizePolicy.Policy.Minimum,
        )
        self.horizontalLayout_7.addItem(spacerItem2)
        self.label_5 = QtWidgets.QLabel(self)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_7.addWidget(self.label_5)
        self.email = QtWidgets.QLineEdit(self)
        self.email.setPlaceholderText("")
        self.email.setObjectName("email")
        self.horizontalLayout_7.addWidget(self.email)
        self.add_user = QtWidgets.QPushButton(self)
        self.add_user.setObjectName("add_user")
        self.horizontalLayout_7.addWidget(self.add_user)
        spacerItem3 = QtWidgets.QSpacerItem(
            40,
            20,
            QtWidgets.QSizePolicy.Policy.Expanding,
            QtWidgets.QSizePolicy.Policy.Minimum,
        )
        self.horizontalLayout_7.addItem(spacerItem3)
        self.verticalLayout.addLayout(self.horizontalLayout_7)

        line_2 = QtWidgets.QFrame(self)
        line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(line_2)

        self.scrollArea_2 = QtWidgets.QScrollArea()
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_8 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_8.setObjectName("scrollAreaWidgetContents_8")
        self.verticalLayout_1 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_8)
        self.verticalLayout_1.setObjectName("verticalLayout_1")

        next_list = []
        datalist = []
        instance = DatabaseHandler()
        instance.createConnection()
        content = instance.findUsersForAdvanced(self.parent().user_login.get_id())
        if not content:
            content = []
        else:
            for con in content:
                next_list.append(con[0])
            datalist = instance.findUserByIdList(next_list)
        instance.closeConnection()

        for x in datalist:
            self.verticalLayout_1.addLayout(
                UserSeeList(name=str(x[1]), surname=str(x[2]), email=str(x[4]))
            )

        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_8)
        self.verticalLayout.addWidget(self.scrollArea_2)

        line_3 = QtWidgets.QFrame(self)
        line_3.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        line_3.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        line_3.setObjectName("line_3")
        self.verticalLayout.addWidget(line_3)

        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem18 = QtWidgets.QSpacerItem(
            40,
            20,
            QtWidgets.QSizePolicy.Policy.Expanding,
            QtWidgets.QSizePolicy.Policy.Minimum,
        )
        self.horizontalLayout_5.addItem(spacerItem18)
        self.back = QtWidgets.QPushButton(self)
        self.back.setObjectName("back")
        self.horizontalLayout_5.addWidget(self.back)
        spacerItem19 = QtWidgets.QSpacerItem(
            40,
            20,
            QtWidgets.QSizePolicy.Policy.Expanding,
            QtWidgets.QSizePolicy.Policy.Minimum,
        )
        self.horizontalLayout_5.addItem(spacerItem19)
        self.verticalLayout.addLayout(self.horizontalLayout_5)

        self.retranslateUi()
        self.addActionBattons()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("SingUp", "Form"))
        self.label_5.setText(
            _translate("ManagmentSensor", "Wprowadź adres email uzytkownika")
        )
        self.add_user.setText(_translate("ManagmentSensor", "Dodaj"))
        self.back.setText(_translate("SingUp", "Wróć"))

    def addActionBattons(self):
        self.add_user.clicked.connect(lambda: self.addUsers())
        self.back.clicked.connect(lambda: self.backScreen())

    def addUsers(self):
        if self.email.text().__eq__(""):
            self.createMessageBox("Uzupełnij pole email!")
        else:
            instance = DatabaseHandler()
            instance.createConnection()
            if not instance.findAnyEmail(self.email.text()):
                if instance.findUserPrivilegesById(
                    int(instance.findUserIDByEmail(self.email.text()))
                ):
                    if instance.findUserExistForAdvanced(
                        self.parent().user_login.get_id(),
                        instance.findUserIDByEmail(self.email.text()),
                    ):
                        if instance.insertUserAndAdvanced(
                            self.parent().user_login.get_id(), self.email.text()
                        ):
                            self.createMessageBox("Pomyślnie dodałeś użytkownika")
                            instance.closeConnection()
                            self.parent().listUsersShow()
                    else:
                        self.createMessageBox(
                            "Użytkonik o podanym emailu już jest dodany"
                        )
                else:
                    self.createMessageBox(
                        "Użytkownik jest osobą wykwalifikowana nie możesz jej dodać"
                    )
            else:
                self.createMessageBox("Użytkonik o podanym emailu nie istnije")
            instance.closeConnection()

    def createMessageBox(self, message: str):
        msg = QMessageBox()
        msg.setWindowTitle("Błąd")
        msg.setText(message)
        msg.exec()

    def backScreen(self):
        self.parent().openLastWidget()
