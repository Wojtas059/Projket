# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: management.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nanopb_pb2 as nanopb__pb2

DESCRIPTOR = _descriptor.FileDescriptor(
    name="management.proto",
    package="",
    syntax="proto3",
    serialized_options=None,
    serialized_pb=b'\n\x10management.proto\x1a\x0cnanopb.proto"P\n\x04Ping\x12\x0e\n\x06pingID\x18\x01 \x01(\x05\x12\x1d\n\x15\x65xpectedAmountOfPongs\x18\x02 \x01(\x05\x12\x19\n\x11\x64\x65layBetweenPongs\x18\x03 \x01(\x05"\x16\n\x04Pong\x12\x0e\n\x06pongID\x18\x01 \x01(\x05"+\n\x12\x44iagnosticsRequest\x12\x15\n\rcheckMAX30001\x18\x01 \x01(\x08"\xe0\x01\n\x13\x44iagnosticsResponse\x12\x34\n\x0fmax30001AStatus\x18\x01 \x01(\x0e\x32\x1b.DiagnosticsResponse.Status\x12\x34\n\x0fmax30001BStatus\x18\x02 \x01(\x0e\x32\x1b.DiagnosticsResponse.Status"]\n\x06Status\x12 \n\x1c\x44IAG_RESPONSE_STATUS_INVALID\x10\x00\x12\x0e\n\nNOT_TESTED\x10\x01\x12\r\n\tTESTED_OK\x10\x02\x12\x12\n\x0eTESTED_FAILURE\x10\x03"\x19\n\x17StopMeasurementsRequest"7\n\x18StopMeasurementsResponse\x12\x1b\n\x13measurementsStopped\x18\x01 \x01(\x08"\xfd\x04\n\x1bStartECGMeasurementsRequest\x12/\n\x04type\x18\x01 \x01(\x0e\x32!.StartECGMeasurementsRequest.Type\x12/\n\x04rate\x18\x02 \x01(\x0e\x32!.StartECGMeasurementsRequest.Rate\x12/\n\x04gain\x18\x03 \x01(\x0e\x32!.StartECGMeasurementsRequest.Gain\x12M\n\x13lowPassFilterCutoff\x18\x04 \x01(\x0e\x32\x30.StartECGMeasurementsRequest.LowPassFilterCutoff\x12\x1d\n\x15highPassFilterEnabled\x18\x05 \x01(\x08";\n\x04Type\x12 \n\x1c\x45\x43G_MEASUREMENT_TYPE_INVALID\x10\x00\x12\x07\n\x03\x45MG\x10\x01\x12\x08\n\x04TEST\x10\x02"L\n\x04Rate\x12\x14\n\x10\x45\x43G_RATE_INVALID\x10\x00\x12\x0e\n\nRATE_512HZ\x10\x01\x12\x0e\n\nRATE_256HZ\x10\x02\x12\x0e\n\nRATE_128HZ\x10\x03"Y\n\x04Gain\x12\x14\n\x10\x45\x43G_GAIN_INVALID\x10\x00\x12\r\n\tGAIN_20VV\x10\x01\x12\r\n\tGAIN_40VV\x10\x02\x12\r\n\tGAIN_80VV\x10\x03\x12\x0e\n\nGAIN_160VV\x10\x04"w\n\x13LowPassFilterCutoff\x12\x16\n\x12LPF_CUTOFF_INVALID\x10\x00\x12\x0f\n\x0b\x43UTOFF_40HZ\x10\x01\x12\x10\n\x0c\x43UTOFF_100HZ\x10\x02\x12\x10\n\x0c\x43UTOFF_150HZ\x10\x03\x12\x13\n\x0f\x43UTOFF_DISABLED\x10\x04"\x9e\x01\n\x1cStartECGMeasurementsResponse\x12\x13\n\x0bisTypeValid\x18\x01 \x01(\x08\x12\x13\n\x0bisRateValid\x18\x02 \x01(\x08\x12\x13\n\x0bisGainValid\x18\x03 \x01(\x08\x12"\n\x1aisLowPassFilterCutoffValid\x18\x04 \x01(\x08\x12\x1b\n\x13measurementsStarted\x18\x05 \x01(\x08"\xcf\x01\n\rErrorResponse\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.ErrorResponse.Type\x12\x1a\n\x0b\x64\x65scription\x18\x02 \x01(\tB\x05\x92?\x02pd"\x7f\n\x04Type\x12\x16\n\x12\x45RROR_TYPE_INVALID\x10\x00\x12\x13\n\x0fUNKNOWN_REQUEST\x10\x01\x12\x19\n\x15\x43OULDNT_PARSE_REQUEST\x10\x02\x12\x18\n\x14INVALID_DEVICE_STATE\x10\x03\x12\x15\n\x11INVALID_ARGUMENTS\x10\x04\x62\x06proto3',
    dependencies=[nanopb__pb2.DESCRIPTOR,],
)


_DIAGNOSTICSRESPONSE_STATUS = _descriptor.EnumDescriptor(
    name="Status",
    full_name="DiagnosticsResponse.Status",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="DIAG_RESPONSE_STATUS_INVALID",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="NOT_TESTED", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="TESTED_OK", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="TESTED_FAILURE", index=3, number=3, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=317,
    serialized_end=410,
)
_sym_db.RegisterEnumDescriptor(_DIAGNOSTICSRESPONSE_STATUS)

_STARTECGMEASUREMENTSREQUEST_TYPE = _descriptor.EnumDescriptor(
    name="Type",
    full_name="StartECGMeasurementsRequest.Type",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ECG_MEASUREMENT_TYPE_INVALID",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="EMG", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="TEST", index=2, number=2, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=785,
    serialized_end=844,
)
_sym_db.RegisterEnumDescriptor(_STARTECGMEASUREMENTSREQUEST_TYPE)

_STARTECGMEASUREMENTSREQUEST_RATE = _descriptor.EnumDescriptor(
    name="Rate",
    full_name="StartECGMeasurementsRequest.Rate",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ECG_RATE_INVALID",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="RATE_512HZ", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="RATE_256HZ", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="RATE_128HZ", index=3, number=3, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=846,
    serialized_end=922,
)
_sym_db.RegisterEnumDescriptor(_STARTECGMEASUREMENTSREQUEST_RATE)

_STARTECGMEASUREMENTSREQUEST_GAIN = _descriptor.EnumDescriptor(
    name="Gain",
    full_name="StartECGMeasurementsRequest.Gain",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ECG_GAIN_INVALID",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="GAIN_20VV", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="GAIN_40VV", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="GAIN_80VV", index=3, number=3, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="GAIN_160VV", index=4, number=4, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=924,
    serialized_end=1013,
)
_sym_db.RegisterEnumDescriptor(_STARTECGMEASUREMENTSREQUEST_GAIN)

_STARTECGMEASUREMENTSREQUEST_LOWPASSFILTERCUTOFF = _descriptor.EnumDescriptor(
    name="LowPassFilterCutoff",
    full_name="StartECGMeasurementsRequest.LowPassFilterCutoff",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="LPF_CUTOFF_INVALID",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="CUTOFF_40HZ", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="CUTOFF_100HZ", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="CUTOFF_150HZ", index=3, number=3, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="CUTOFF_DISABLED",
            index=4,
            number=4,
            serialized_options=None,
            type=None,
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1015,
    serialized_end=1134,
)
_sym_db.RegisterEnumDescriptor(_STARTECGMEASUREMENTSREQUEST_LOWPASSFILTERCUTOFF)

_ERRORRESPONSE_TYPE = _descriptor.EnumDescriptor(
    name="Type",
    full_name="ErrorResponse.Type",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ERROR_TYPE_INVALID",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="UNKNOWN_REQUEST",
            index=1,
            number=1,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="COULDNT_PARSE_REQUEST",
            index=2,
            number=2,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="INVALID_DEVICE_STATE",
            index=3,
            number=3,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="INVALID_ARGUMENTS",
            index=4,
            number=4,
            serialized_options=None,
            type=None,
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1378,
    serialized_end=1505,
)
_sym_db.RegisterEnumDescriptor(_ERRORRESPONSE_TYPE)


_PING = _descriptor.Descriptor(
    name="Ping",
    full_name="Ping",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="pingID",
            full_name="Ping.pingID",
            index=0,
            number=1,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="expectedAmountOfPongs",
            full_name="Ping.expectedAmountOfPongs",
            index=1,
            number=2,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="delayBetweenPongs",
            full_name="Ping.delayBetweenPongs",
            index=2,
            number=3,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=34,
    serialized_end=114,
)


_PONG = _descriptor.Descriptor(
    name="Pong",
    full_name="Pong",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="pongID",
            full_name="Pong.pongID",
            index=0,
            number=1,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=116,
    serialized_end=138,
)


_DIAGNOSTICSREQUEST = _descriptor.Descriptor(
    name="DiagnosticsRequest",
    full_name="DiagnosticsRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="checkMAX30001",
            full_name="DiagnosticsRequest.checkMAX30001",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=140,
    serialized_end=183,
)


_DIAGNOSTICSRESPONSE = _descriptor.Descriptor(
    name="DiagnosticsResponse",
    full_name="DiagnosticsResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="max30001AStatus",
            full_name="DiagnosticsResponse.max30001AStatus",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="max30001BStatus",
            full_name="DiagnosticsResponse.max30001BStatus",
            index=1,
            number=2,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_DIAGNOSTICSRESPONSE_STATUS,],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=186,
    serialized_end=410,
)


_STOPMEASUREMENTSREQUEST = _descriptor.Descriptor(
    name="StopMeasurementsRequest",
    full_name="StopMeasurementsRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=412,
    serialized_end=437,
)


_STOPMEASUREMENTSRESPONSE = _descriptor.Descriptor(
    name="StopMeasurementsResponse",
    full_name="StopMeasurementsResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="measurementsStopped",
            full_name="StopMeasurementsResponse.measurementsStopped",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=439,
    serialized_end=494,
)


_STARTECGMEASUREMENTSREQUEST = _descriptor.Descriptor(
    name="StartECGMeasurementsRequest",
    full_name="StartECGMeasurementsRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="type",
            full_name="StartECGMeasurementsRequest.type",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="rate",
            full_name="StartECGMeasurementsRequest.rate",
            index=1,
            number=2,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="gain",
            full_name="StartECGMeasurementsRequest.gain",
            index=2,
            number=3,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="lowPassFilterCutoff",
            full_name="StartECGMeasurementsRequest.lowPassFilterCutoff",
            index=3,
            number=4,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="highPassFilterEnabled",
            full_name="StartECGMeasurementsRequest.highPassFilterEnabled",
            index=4,
            number=5,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[
        _STARTECGMEASUREMENTSREQUEST_TYPE,
        _STARTECGMEASUREMENTSREQUEST_RATE,
        _STARTECGMEASUREMENTSREQUEST_GAIN,
        _STARTECGMEASUREMENTSREQUEST_LOWPASSFILTERCUTOFF,
    ],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=497,
    serialized_end=1134,
)


_STARTECGMEASUREMENTSRESPONSE = _descriptor.Descriptor(
    name="StartECGMeasurementsResponse",
    full_name="StartECGMeasurementsResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="isTypeValid",
            full_name="StartECGMeasurementsResponse.isTypeValid",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="isRateValid",
            full_name="StartECGMeasurementsResponse.isRateValid",
            index=1,
            number=2,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="isGainValid",
            full_name="StartECGMeasurementsResponse.isGainValid",
            index=2,
            number=3,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="isLowPassFilterCutoffValid",
            full_name="StartECGMeasurementsResponse.isLowPassFilterCutoffValid",
            index=3,
            number=4,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="measurementsStarted",
            full_name="StartECGMeasurementsResponse.measurementsStarted",
            index=4,
            number=5,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1137,
    serialized_end=1295,
)


_ERRORRESPONSE = _descriptor.Descriptor(
    name="ErrorResponse",
    full_name="ErrorResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="type",
            full_name="ErrorResponse.type",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="description",
            full_name="ErrorResponse.description",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=b"\222?\002pd",
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_ERRORRESPONSE_TYPE,],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1298,
    serialized_end=1505,
)

_DIAGNOSTICSRESPONSE.fields_by_name[
    "max30001AStatus"
].enum_type = _DIAGNOSTICSRESPONSE_STATUS
_DIAGNOSTICSRESPONSE.fields_by_name[
    "max30001BStatus"
].enum_type = _DIAGNOSTICSRESPONSE_STATUS
_DIAGNOSTICSRESPONSE_STATUS.containing_type = _DIAGNOSTICSRESPONSE
_STARTECGMEASUREMENTSREQUEST.fields_by_name[
    "type"
].enum_type = _STARTECGMEASUREMENTSREQUEST_TYPE
_STARTECGMEASUREMENTSREQUEST.fields_by_name[
    "rate"
].enum_type = _STARTECGMEASUREMENTSREQUEST_RATE
_STARTECGMEASUREMENTSREQUEST.fields_by_name[
    "gain"
].enum_type = _STARTECGMEASUREMENTSREQUEST_GAIN
_STARTECGMEASUREMENTSREQUEST.fields_by_name[
    "lowPassFilterCutoff"
].enum_type = _STARTECGMEASUREMENTSREQUEST_LOWPASSFILTERCUTOFF
_STARTECGMEASUREMENTSREQUEST_TYPE.containing_type = _STARTECGMEASUREMENTSREQUEST
_STARTECGMEASUREMENTSREQUEST_RATE.containing_type = _STARTECGMEASUREMENTSREQUEST
_STARTECGMEASUREMENTSREQUEST_GAIN.containing_type = _STARTECGMEASUREMENTSREQUEST
_STARTECGMEASUREMENTSREQUEST_LOWPASSFILTERCUTOFF.containing_type = (
    _STARTECGMEASUREMENTSREQUEST
)
_ERRORRESPONSE.fields_by_name["type"].enum_type = _ERRORRESPONSE_TYPE
_ERRORRESPONSE_TYPE.containing_type = _ERRORRESPONSE
DESCRIPTOR.message_types_by_name["Ping"] = _PING
DESCRIPTOR.message_types_by_name["Pong"] = _PONG
DESCRIPTOR.message_types_by_name["DiagnosticsRequest"] = _DIAGNOSTICSREQUEST
DESCRIPTOR.message_types_by_name["DiagnosticsResponse"] = _DIAGNOSTICSRESPONSE
DESCRIPTOR.message_types_by_name["StopMeasurementsRequest"] = _STOPMEASUREMENTSREQUEST
DESCRIPTOR.message_types_by_name["StopMeasurementsResponse"] = _STOPMEASUREMENTSRESPONSE
DESCRIPTOR.message_types_by_name[
    "StartECGMeasurementsRequest"
] = _STARTECGMEASUREMENTSREQUEST
DESCRIPTOR.message_types_by_name[
    "StartECGMeasurementsResponse"
] = _STARTECGMEASUREMENTSRESPONSE
DESCRIPTOR.message_types_by_name["ErrorResponse"] = _ERRORRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Ping = _reflection.GeneratedProtocolMessageType(
    "Ping",
    (_message.Message,),
    {
        "DESCRIPTOR": _PING,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:Ping)
    },
)
_sym_db.RegisterMessage(Ping)

Pong = _reflection.GeneratedProtocolMessageType(
    "Pong",
    (_message.Message,),
    {
        "DESCRIPTOR": _PONG,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:Pong)
    },
)
_sym_db.RegisterMessage(Pong)

DiagnosticsRequest = _reflection.GeneratedProtocolMessageType(
    "DiagnosticsRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _DIAGNOSTICSREQUEST,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:DiagnosticsRequest)
    },
)
_sym_db.RegisterMessage(DiagnosticsRequest)

DiagnosticsResponse = _reflection.GeneratedProtocolMessageType(
    "DiagnosticsResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _DIAGNOSTICSRESPONSE,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:DiagnosticsResponse)
    },
)
_sym_db.RegisterMessage(DiagnosticsResponse)

StopMeasurementsRequest = _reflection.GeneratedProtocolMessageType(
    "StopMeasurementsRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _STOPMEASUREMENTSREQUEST,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:StopMeasurementsRequest)
    },
)
_sym_db.RegisterMessage(StopMeasurementsRequest)

StopMeasurementsResponse = _reflection.GeneratedProtocolMessageType(
    "StopMeasurementsResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _STOPMEASUREMENTSRESPONSE,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:StopMeasurementsResponse)
    },
)
_sym_db.RegisterMessage(StopMeasurementsResponse)

StartECGMeasurementsRequest = _reflection.GeneratedProtocolMessageType(
    "StartECGMeasurementsRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _STARTECGMEASUREMENTSREQUEST,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:StartECGMeasurementsRequest)
    },
)
_sym_db.RegisterMessage(StartECGMeasurementsRequest)

StartECGMeasurementsResponse = _reflection.GeneratedProtocolMessageType(
    "StartECGMeasurementsResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _STARTECGMEASUREMENTSRESPONSE,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:StartECGMeasurementsResponse)
    },
)
_sym_db.RegisterMessage(StartECGMeasurementsResponse)

ErrorResponse = _reflection.GeneratedProtocolMessageType(
    "ErrorResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _ERRORRESPONSE,
        "__module__": "management_pb2"
        # @@protoc_insertion_point(class_scope:ErrorResponse)
    },
)
_sym_db.RegisterMessage(ErrorResponse)


_ERRORRESPONSE.fields_by_name["description"]._options = None
# @@protoc_insertion_point(module_scope)
